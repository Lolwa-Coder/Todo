{"version":3,"sources":["Form.jsx","App.js","index.js"],"names":["onSubmit","inititialValue","useState","value","setValue","onChange","e","target","resetValue","useInputValue","text","preventDefault","todos","setTodos","head","setHead","isleft","i","className","id","onClick","Form","complete","map","complete1","todo","k","style","background","float","textAlign","ReactDOM","render","App","document","getElementById"],"mappings":"4KASe,cAAiB,IAAfA,EAAc,EAAdA,SAAc,EARV,SAACC,GAAkB,IAAD,EACXC,mBAASD,GADE,mBAC5BE,EAD4B,KACtBC,EADsB,KAEnC,MAAM,CACFD,QACAE,SAAS,SAACC,GAAD,OAAKF,EAASE,EAAEC,OAAOJ,QAChCK,WAAW,kBAAIJ,EAAS,MAIDK,CAAc,IAAlCD,EADoB,EACpBA,WAAcE,EADM,8BAE3B,OACA,sBAAMV,SAAU,SAACM,GACbA,EAAEK,iBACFX,EAASU,EAAKP,OACdK,KAHJ,SAMA,qCAAWE,OCfA,aAAO,IAAD,EACOR,mBAAS,IADhB,mBACVU,EADU,KACJC,EADI,OAOMX,mBAAS,wBAPf,mBAOVY,EAPU,KAOLC,EAPK,KAQXC,EAAO,SAACC,GACV,OAAGA,EAAE,IAAI,EACF,OAEA,SAGX,OACI,sBAAKC,UAAU,MAAf,UACI,qBAAKC,GAAG,SAAR,SAAkB,6BAAKL,MACvB,wBAAQK,GAAG,OAAOC,QAAS,kBAAIP,EAAS,KAAxC,mBACJ,cAACQ,EAAD,CACCrB,SAAU,SAACU,GAAD,OAAQG,EAAS,CAAC,CAAEH,OAAKY,UAAS,IAAlB,mBAA4BV,QACvD,qBAAKQ,QAAS,kBAAIL,EAAQ,iBAAgBI,GAAI,KAA9C,SACKP,EAAMW,KAAI,WAAkBN,GAAlB,IAAEP,EAAF,EAAEA,KAAKc,EAAP,EAAOA,UAAP,OACP,qBAAiBJ,QAAS,kBArBtB,SAACH,GAAD,OAAKJ,EAASD,EAAMW,KAAI,SAACE,EAAMC,GAAP,OAAYA,IAAKT,EAAN,YAAC,eAC7CQ,GAD4C,IAE/CD,WAAWC,EAAKD,YAClBC,MAkBwCH,CAASL,IACvCU,MAAO,CAACC,WAAWJ,EAAY,QAAS,GAAGK,MAAMb,EAAOC,GAAGa,UAAUd,EAAOC,EAAE,IAD9E,SACoFP,GADzEA,YCpB3BqB,IAASC,OAEL,cAACC,EAAD,IAEFC,SAASC,eAAe,U","file":"static/js/main.e07bf69c.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nconst useInputValue= (inititialValue)=>{\r\n    const [value,setValue]= useState(inititialValue);\r\n    return{\r\n        value,\r\n        onChange:(e)=>setValue(e.target.value),\r\n        resetValue:()=>setValue(\"\")\r\n    };\r\n};\r\nexport default ({onSubmit}) => {\r\n    const {resetValue,...text}=useInputValue(\"\");\r\n    return(\r\n    <form onSubmit={(e)=>{\r\n        e.preventDefault();\r\n        onSubmit(text.value);\r\n        resetValue();\r\n        \r\n    }}>\r\n    <input {...text}/>\r\n    </form>)\r\n};","import React, {useState} from 'react';\r\nimport Form from \"./Form\";\r\nimport './index.css';\r\nexport default () => {\r\n    const [todos,setTodos]= useState([]);\r\n    const complete =(i)=>setTodos(todos.map((todo, k)=>(k)===i?{\r\n        ...todo,\r\n        complete1:!todo.complete1\r\n    }:todo));\r\n\r\n    const [head,setHead] = useState(\"To DO? or not to DO?\");\r\n    const isleft=(i)=>{\r\n        if(i%2!==0)\r\n        return \"left\";\r\n        else \r\n        return \"right\";\r\n    }\r\n   \r\n    return(\r\n        <div className=\"App\">\r\n            <div id=\"h1wrap\" ><h1>{head}</h1></div>\r\n            <button id=\"butt\" onClick={()=>setTodos([])}>reset</button>\r\n        <Form \r\n         onSubmit={(text)=>setTodos([{ text,complete:false},...todos])}/>\r\n        <div onClick={()=>setHead(\"DO IT NIGGA!\")}id =\"to\">\r\n            {todos.map(({text,complete1},i)=>(\r\n                <div key ={text} onClick={()=>complete(i)}\r\n                style={{background:complete1 ? \"black\": \"\",float:isleft(i),textAlign:isleft(i+1)}}>{text}</div>\r\n            ))}\r\n        \r\n        </div>\r\n        \r\n        </div>\r\n    );\r\n\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n  \n    <App  />\n  ,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}